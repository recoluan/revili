import{_ as n,o as s,c as a,a as e}from"./app-B9x98SZo.js";const p={},t=e(`<h2 id="definekit" tabindex="-1"><a class="header-anchor" href="#definekit"><span>defineKit</span></a></h2><ul><li>Type: <code>(options: KitOptions) =&gt; Kit</code></li><li>Description: Declare the suite to register custom commands and GUI&#39;s local communication service, etc.</li><li>Example:<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineKit<span class="token punctuation">,</span> useServerSocket<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">Kit</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;revili/node&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> demoKit<span class="token operator">:</span> Kit <span class="token operator">=</span> <span class="token function">defineKit</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// The name of the kit</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;revili-kit-demo&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// The GUI client development framework, default vue, and will expand react, servlet, web component, etc.</span></span>
<span class="line">  webFramework<span class="token operator">:</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Refer to https://vitejs.dev/config/</span></span>
<span class="line">  viteOptions<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Register for services that can communicate with GUI</span></span>
<span class="line">  <span class="token function">registerService</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// Register the command</span></span>
<span class="line">  <span class="token function">registerCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span> program <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    program<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You triggered the test command!ÔºÅ&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> demoKit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="kitoptions" tabindex="-1"><a class="header-anchor" href="#kitoptions"><span>KitOptions</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">KitOptions</span> <span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  webFramework<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line">  viteOptions<span class="token operator">?</span><span class="token operator">:</span> UserConfig</span>
<span class="line">  registerService<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>server<span class="token operator">:</span> ViteDevServer<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span>
<span class="line">  <span class="token function-variable function">registerCommand</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token punctuation">{</span>program<span class="token operator">:</span> <span class="token constant">CAC</span><span class="token punctuation">;</span> reviliConfig<span class="token operator">?</span><span class="token operator">:</span> ReviliConfig<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="useserversocket" tabindex="-1"><a class="header-anchor" href="#useserversocket"><span>useServerSocket</span></a></h2><ul><li>Type: <code>(server: ViteDevServer) =&gt; WebSocketServer | null</code></li><li>Description: The server communicates with the client.</li><li>Example:<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>defineKit<span class="token punctuation">,</span> useServerSocket<span class="token punctuation">,</span> <span class="token keyword">type</span> <span class="token class-name">Kit</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;revili/node&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> demoKit<span class="token operator">:</span> Kit <span class="token operator">=</span> <span class="token function">defineKit</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  name<span class="token operator">:</span> <span class="token string">&#39;revili-kit-demo&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">registerService</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token function">useServerSocket</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    socket<span class="token operator">?.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;event-name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// ...</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    socket<span class="token operator">?.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;event-name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;message&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> demoKit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,6),i=[t];function l(c,o){return s(),a("div",null,i)}const u=n(p,[["render",l],["__file","node-api.html.vue"]]),d=JSON.parse('{"path":"/docs/api/node-api.html","title":"Node API","lang":"en-US","frontmatter":{"title":"Node API"},"headers":[{"level":2,"title":"defineKit","slug":"definekit","link":"#definekit","children":[]},{"level":2,"title":"KitOptions","slug":"kitoptions","link":"#kitoptions","children":[]},{"level":2,"title":"useServerSocket","slug":"useserversocket","link":"#useserversocket","children":[]}],"git":{"createdTime":1719285774000,"updatedTime":1719285774000,"contributors":[{"name":"Reco","email":"recoluan@qq.com","commits":1}]},"filePathRelative":"docs/api/node-api.md"}');export{u as comp,d as data};
